{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/uart-comms/uart-comms.service.ts","./src/app/services/web-sockets/web-sockets.service.ts","./src/app/ui-components/home/home.component.html","./src/app/ui-components/home/home.component.scss","./src/app/ui-components/home/home.component.ts","./src/app/ui-components/navbar/navbar.component.html","./src/app/ui-components/navbar/navbar.component.scss","./src/app/ui-components/navbar/navbar.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './ui-components/home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"<eai-navbar></eai-navbar>\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'eai-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'eai';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { NavbarComponent } from './ui-components/navbar/navbar.component';\nimport { HomeComponent } from './ui-components/home/home.component';\n\n//Import relevant services\nimport { WebSocketsService } from \"./services/web-sockets/web-sockets.service\"\nimport {UartCommsService} from \"./services/uart-comms/uart-comms.service\"\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [WebSocketsService, UartCommsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { WebSocketsService } from '../web-sockets/web-sockets.service';\n\nconst SERVER_URL = \"ws://192.168.42.1:6123\";\t//this is the static ip address of the rapsberry pi AP\n\nexport interface Message {\n\tCommand: string,\n\tData: string\n}\n\n@Injectable()\nexport class UartCommsService {\n\tpublic messages: Subject<Message>;\n\tmessage: Message;\n\tconstructor(wsService: WebSocketsService) {\n\t\tthis.messages = <Subject<Message>>wsService\n\t\t\t.connect(SERVER_URL)\n\t\t\t.map((response: MessageEvent): Message => {\n\t\t\t\treturn this.message = JSON.parse(response.data);\n\t\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/uart-comms/uart-comms.service.ts","import { Injectable } from '@angular/core';\nimport * as Rx from 'rxjs/Rx';\n\n@Injectable()\nexport class WebSocketsService {\n  constructor() { }\n\n  private subject: Rx.Subject<MessageEvent>;\n\n\tpublic connect(url): Rx.Subject<MessageEvent> {\n\t\tif (!this.subject) {\n\t\t\tthis.subject = this.create(url);\n      console.log(\"Successfully connected: \" + url);\n\t\t} \n\t\treturn this.subject;\n\t}\n\n  private create(url): Rx.Subject<MessageEvent> {\n\t\tlet ws = new WebSocket(url);\n\n\t\tlet observable = Rx.Observable.create(\n\t\t\t(obs: Rx.Observer<MessageEvent>) => {\n\t\t\t\tws.onmessage = obs.next.bind(obs);\n\t\t\t\tws.onerror = obs.error.bind(obs);\n\t\t\t\tws.onclose = obs.complete.bind(obs);\n\t\t\t\treturn ws.close.bind(ws);\n\t\t\t})\n\n\t\tlet observer = {\n\t\t\tnext: (data: Object) => {\n\t\t\t\tif (ws.readyState === WebSocket.OPEN) {\n\t\t\t\t\tws.send(JSON.stringify(data));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Rx.Subject.create(observer, observable);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/web-sockets/web-sockets.service.ts","module.exports = \"<body>\\n  <section class=\\\"section\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"title\\\">Send</h1>\\n      <h2 class=\\\"subtitle\\\">\\n          Type the message you want to send to the UART port and hit send or enter!\\n        </h2>\\n        <div class=\\\"card \\\" style=\\\"background-color: #0BE4B6;\\\">\\n            <div class=\\\"card-content \\\">\\n                <div class=\\\"columns text-center\\\">\\n                    <div class=\\\"column is-10\\\"> <input class=\\\"input is-rounded is-medium\\\" type=\\\"text\\\" placeholder=\\\"Enter message\\\" [(ngModel)]=\\\"messageTX\\\" (keyup.enter)=\\\"sendMessage()\\\"></div>\\n                    <div class=\\\"column \\\"><a class=\\\"button is-rounded is-medium is-fullwidth\\\" (click)=\\\"sendMessage()\\\">Send</a></div>\\n                  </div>\\n            </div>\\n          </div>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"section\\\">\\n      <div class=\\\"container\\\">\\n        <h1 class=\\\"title\\\">Receive</h1>\\n        <h2 class=\\\"subtitle\\\">\\n            This is where your received messages will appear!\\n          </h2>\\n          <div class=\\\"card\\\">\\n              <div class=\\\"card-content\\\">\\n                <div *ngFor=\\\"let msg of messagesRX; let i = index\\\" style=\\\"padding: 1%\\\">\\n                  <div class=\\\"notification\\\" >\\n                      <button class=\\\"delete\\\" (click)=\\\"deleteMessage(i)\\\"></button>\\n                      {{msg}}\\n                    </div>\\n                  </div>\\n              </div>\\n            </div>\\n      </div>\\n    </section>\\n</body>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ui-components/home/home.component.html\n// module id = ./src/app/ui-components/home/home.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ui-components/home/home.component.scss\n// module id = ./src/app/ui-components/home/home.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {UartCommsService } from '../../services/uart-comms/uart-comms.service'\nimport { from } from 'rxjs/observable/from';\n\n@Component({\n  selector: 'eai-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  messageTX: string = \"\";\n  messagesRX: string[] = [];\n  private message = {Command: '',Data: ''}; //Message object we defined for our websocket service\n\n  constructor(private comms: UartCommsService) {}\n\n  ngOnInit() {\n    //subscribe to the receiver the observable for the comms\n    this.comms.messages.subscribe(msg => {\n      if (msg.Command === \"echo\"){  //add the messages to our array of recieved messages\n        this.messagesRX.push(msg.Command + ': ' + msg.Data);\n      }\n      else if (msg.Command === \"delete\"){ //delete message from memory\n        this.messagesRX.splice(Number(msg.Data), 1);\n      }\t\t\t\n    });\n  }\n\n  //Send message to websocket with echo command so it comes back to us  \n  sendMessage(){\n    //Package message object with new data\n    this.message.Command = \"echo\";\n    this.message.Data = this.messageTX;\n    //Send message object to websocket via observable\n    this.comms.messages.next(this.message);\n    //Clear message string\n\t\tthis.messageTX = \"\";\n  }\n\n  //Tell server you want to remove this message\n  deleteMessage(msgIndex: number){\n    this.message.Command = \"delete\";\n    this.message.Data = msgIndex.toString();\n    this.comms.messages.next(this.message);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ui-components/home/home.component.ts","module.exports = \"\\n<nav class=\\\"navbar\\\" role=\\\"navigation\\\" aria-label=\\\"main navigation\\\" style=\\\"background-color: #1c2a48\\\">\\n    <div class=\\\"container\\\">\\n  <div class=\\\"navbar-brand\\\">\\n    <a class=\\\"navbar-item\\\" href=\\\"https://cyferlinx.com\\\">\\n      <img src=\\\"../../../assets/cyferlinx-standalone-v3.svg\\\" width=\\\"200\\\" height=\\\"200\\\">\\n    </a>\\n\\n    <a role=\\\"button\\\" class=\\\"navbar-burger burger\\\" aria-label=\\\"menu\\\" aria-expanded=\\\"false\\\" data-target=\\\"navbarBasicExample\\\">\\n      <span aria-hidden=\\\"true\\\"></span>\\n      <span aria-hidden=\\\"true\\\"></span>\\n      <span aria-hidden=\\\"true\\\"></span>\\n    </a>\\n  </div>\\n\\n  <div id=\\\"navbarBasicExample\\\" class=\\\"navbar-menu\\\">\\n\\n    <div class=\\\"navbar-end\\\">\\n      <div class=\\\"navbar-item\\\">\\n        <div class=\\\"buttons\\\">\\n          <a class=\\\"button is-rounded is-medium\\\" style=\\\"background-color: #0BE4B6; color: #1c2a48; border-color:  #0BE4B6\\\" href=\\\"https://www.cyferlinx.com/signup\\\">\\n            <strong>Sign up</strong>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ui-components/navbar/navbar.component.html\n// module id = ./src/app/ui-components/navbar/navbar.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ui-components/navbar/navbar.component.scss\n// module id = ./src/app/ui-components/navbar/navbar.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'eai-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ui-components/navbar/navbar.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}